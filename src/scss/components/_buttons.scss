@use "../abstracts" as *;

.btn {
  cursor: pointer;
  border: none;
  color: inherit;
  background: none;

  &-icon {
    svg {
      @include min-size(1.5rem);
    }
  }

  &-add-task {
    display: flex;
    align-items: center;
    font-weight: 700;

    @include themify {
      color: themed("main");
    }

    &-l {
      gap: 0.75rem;
      font-size: 1.5rem;

      > svg {
        @include min-size(2rem);
      }
    }
  }

  &-project-edit {
    margin-left: auto;
  }

  &-func {
    border-radius: 0.5rem;
    padding: 0.5rem 1rem;
    font-size: 1rem;

    &-primary {
      @include themify {
        color: #fff;
        background-color: themed("main");
      }

      &:disabled {
        @include themify {
          color: themed("text-disabled");
          background-color: themed("disabled");
        }
      }
    }

    &-secondary {
      @include themify {
        color: themed("text-main");
        background-color: themed("accent");
      }
    }
  }

  &-select {
    display: flex;
    align-items: center;
    gap: 0.8rem;

    & {
      @include themify {
        color: themed("text-main");
      }
    }

    &-priority {
      @include priority-color-fill();
    }
  }

  &-label {
    display: flex;
    align-items: center;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    gap: 0.5rem;
    margin: 0 !important;

    @include themify {
      color: themed("text-main");
      border: 1px solid themed("icon");
    }

    &-priority {
      @include priority-color-fill {
        border-color: priority-colored() !important;
        color: priority-colored() !important;
      }
    }

    svg {
      @include min-size(1.25rem);
    }
  }

  &-check {
    position: relative;
    border: 0.2rem solid;
    flex: 0 0 auto;

    & {
      @include circle(2rem);
      @include priority-color {
        border-color: priority-colored() !important;
        background-color: to-rgba(priority-colored(), 0.25);

        &:disabled {
          border-color: to-rgba(priority-colored(), 0.7) !important;
          background-color: to-rgba(priority-colored(), 0.15);
        }

        &:not(:disabled):not(.checked)::after {
          color: priority-colored() !important;
        }

        &.checked {
          background-color: priority-colored() !important;
        }
      }
    }

    & {
      @include themify {
        border-color: themed("accent");

        &:disabled {
          border-color: to-rgba(themed("accent"), 0.7);
        }

        &:hover::after {
          color: themed("accent");
        }

        &.checked::after {
          color: themed("background");
        }

        &.checked {
          background-color: themed("accent");
        }
      }
    }

    &:not(:disabled):hover::after,
    &.checked::after {
      content: "âœ“";
      font-weight: 700;
    }
  }

  &-undo {
    font-size: 1rem;
    font-weight: 700;

    @include themify {
      color: themed("main");
    }
  }

  &-sidebar {
    display: flex;
    align-items: center;
    font-size: 1rem;
    width: 100%;
    border-radius: 0.5rem;

    &.active,
    &:active {
      @include themify {
        background-color: themed("accent-dark");
      }
    }

    &-l {
      gap: 0.5rem;
      padding: 0.375rem;
    }

    &-s {
      gap: 0.75rem;
      padding: 0.25rem 0.375rem;
    }
  }
}
